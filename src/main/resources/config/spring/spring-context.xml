<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-lazy-init="true" default-autowire="byName">
	
	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName">
			<value>SYSTEM_PROPERTIES_MODE_OVERRIDE</value>
		</property>
		<property name="locations">
			<list>
				<value>classpath:config/properties/*.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${driverClass}" />  
    	<property name="url" value="${jdbcUrl}" />  
    	<property name="username" value="${user}" />  
    	<property name="password" value="${password}" />  
    	<property name="initialSize" value="${initialSize}" />  
    	<property name="minIdle" value="${minIdle}" />   
    	<property name="maxActive" value="${maxActive}" />  
    	<property name="maxWait" value="${maxWait}" />  
    	<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />  
    	<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />  
    	<property name="validationQuery" value="${validationQuery}" />  
    	<property name="testWhileIdle" value="${testWhileIdle}" />  
    	<property name="testOnBorrow" value="${testOnBorrow}" />  
    	<property name="testOnReturn" value="${testOnReturn}" />   
    	<property name="filters" value="${filters}" />    
	</bean>

	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				 <value>classpath*:com/geyan/model/mapper/*.xml</value>
				<!-- <value>classpath:config/properties/*.xml</value> -->
			</list>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.geyan.dao" />
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="advice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
			<tx:method name="*" rollback-for="Exception" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.gean.service.impl.*.*(..))" id="servicePoint"/>
		<aop:pointcut expression="execution(* com.geyan.dao.*.*(..))" id="daoPoint"/>
		<aop:advisor advice-ref="advice" pointcut-ref="servicePoint"/>
		<aop:advisor advice-ref="advice" pointcut-ref="daoPoint"/>
	</aop:config>
	
 </beans>